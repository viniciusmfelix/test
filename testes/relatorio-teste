
Vinicius Lima Matos Felix	
RM 81247


import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.Test;

class JulgamentoPrisioneiroTest {
	
	private int PENA_INOCENCIA = 0;
	private int PENA_CONDENACAO_MUTUA = 5;
	private int PENA_CONDENACAO_INDIVIDUAL = 10;
	private int PENA_CONDENACAO_CUMPLICES = 1;
	
	private static final String INOCENTE = "Inocente";
	private static final String CULPADO = "Culpado";

	@Test
	public void testCalculaPenaInocencia() {
		
		JulgamentoPrisioneiro prisioneiro = new JulgamentoPrisioneiro();
		
		String prisioneiroA = INOCENTE;
		String prisioneiroB = INOCENTE;
		
		int pena = prisioneiro.calculaPena(prisioneiroA, prisioneiroB);
		
		assertEquals(PENA_INOCENCIA, pena);
		
	}
	
	@Test
	public void testCalculaPenaCondenacaoMutua() {
		
		JulgamentoPrisioneiro prisioneiro = new JulgamentoPrisioneiro();
		
		String prisioneiroA = CULPADO;
		String prisioneiroB = CULPADO;
		
		int pena = prisioneiro.calculaPena(prisioneiroA, prisioneiroB);
		
		assertEquals(PENA_CONDENACAO_MUTUA, pena);
		
	}
	
	@Test
	public void testCalculaPenaCondenacaoIndividual() {
		
		JulgamentoPrisioneiro prisioneiro = new JulgamentoPrisioneiro();
		
		String prisioneiroA = CULPADO;
		String prisioneiroB = INOCENTE;
		
		int pena = prisioneiro.calculaPena(prisioneiroA, prisioneiroB);
		
		assertEquals(PENA_CONDENACAO_INDIVIDUAL, pena);
		
	}
	
	@Test
	public void testCalculaPenaCondenacaoCumplices() {
		
		JulgamentoPrisioneiro prisioneiro = new JulgamentoPrisioneiro();
		
		String prisioneiroA = INOCENTE;
		String prisioneiroB = CULPADO;
		
		int pena = prisioneiro.calculaPena(prisioneiroA, prisioneiroB);
		
		assertEquals(PENA_CONDENACAO_CUMPLICES, pena);
		
	}

}

// Primeira depuração

Interpretação: Um erro de compilação referente ao código Java provido é gerado ao executar a JUnit. O erro foi gerado por conta da falta do parâmetro 'Resposta' (sendo passada uma classe como parâmetro ao invés de uma String).

Stacktrace: java.lang.Error: Unresolved compilation problems: 
	The method calculaPena(Resposta, Resposta) from the type JulgamentoPrisioneiro refers to the missing type Resposta
	The method calculaPena(Resposta, Resposta) from the type JulgamentoPrisioneiro refers to the missing type Resposta
	The method calculaPena(Resposta, Resposta) from the type JulgamentoPrisioneiro refers to the missing type Resposta
	The method calculaPena(Resposta, Resposta) from the type JulgamentoPrisioneiro refers to the missing type Resposta

Correcao: Na classe Java, foi alterado o parâmetro de input de 'calculaPena(Resposta prisioneiroA, Resposta prisioneiroB)' para 'calculaPena(String prisioneiroA, String prisioneiroB)' de acordo com o algoritmo primário fornecido no arquivo .docx.

Correção: O método calculaPena teve seus parâmetros substituidos para tipos String.

Código: public class JulgamentoPrisioneiro {

	private int PENA_INOCENCIA = 10;
	private int PENA_CONDENACAO_MUTUA = 15;
	private int PENA_CONDENACAO_INDIVIDUAL = 10;
	private int PENA_CONDENACAO_CUMPLICES = 11;

	public int calculaPena(String respostaPrisioneiroA, String respostaPrisioneiroB) {
		if (respostaPrisioneiroA == Resposta.DELACAO) {
			if (respostaPrisioneiroB == Resposta.DELACAO) {
				return PENA_CONDENACAO_MUTUA;
			} else {
				return PENA_INOCENCIA;
			}
		} else {
			if (respostaPrisioneiroB == Resposta.DELACAO) {
				return PENA_CONDENACAO_INDIVIDUAL;
			} else {
				return PENA_CONDENACAO_CUMPLICES;
			}
		}

	}

}

// Segunda depuração

Interpretação: Um erro de variáveis foi gerado durante os testes por conta do tipo de parâmetro passado no método 'calculaPena', String foram adicionadas no lugar do parâmetro 'Resposta', e o erro está sendo gerado porque está usando como parâmetro de correção tipos de variáveis que não existem.

Stacktrace: java.lang.Error: Unresolved compilation problems: 
	Resposta cannot be resolved to a variable
	Resposta cannot be resolved to a variable
	Resposta cannot be resolved to a variable

Correção: A comparação teve seu argumento substituído para a String literal "Culpado", como no algoritmo original.

Código: public class JulgamentoPrisioneiro {

	private int PENA_INOCENCIA = 10;
	private int PENA_CONDENACAO_MUTUA = 15;
	private int PENA_CONDENACAO_INDIVIDUAL = 10;
	private int PENA_CONDENACAO_CUMPLICES = 11;

	public int calculaPena(String respostaPrisioneiroA, String respostaPrisioneiroB) {
		if (respostaPrisioneiroA == "Culpado") {
			if (respostaPrisioneiroB == "Culpado") {
				return PENA_CONDENACAO_MUTUA;
			} else {
				return PENA_INOCENCIA;
			}
		} else {
			if (respostaPrisioneiroB == "Culpado") {
				return PENA_CONDENACAO_INDIVIDUAL;
			} else {
				return PENA_CONDENACAO_CUMPLICES;
			}
		}

	}

}

// Terceira depuração

Interpretação: Um erro de valores foi gerado no método cauculaPenaCondenacaoMutua, o valor esperado era 5 porem o retornado foi 15 devido a variável com valor incorreto na classe JulgamentoPrisioneiro.

Stacktrace: org.opentest4j.AssertionFailedError: expected: <5> but was: <15>
	at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)

Correção: A variável de valor incorreto 'PENA_CONDENACAO_MUTUA = 15' foi redefinida para 'PENA_CONDENACAO_MUTUA = 5'

// Quarta depuração

Interpretação: Um erro de valores foi gerado no método testCauculaPenaCondenacaoCumplices, o valor esperado era 1 porem o retornado foi 10 devido a variável retornada ser a variável incorreta para este case.

Stacktrace: org.opentest4j.AssertionFailedError: expected: <1> but was: <10>
	at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)

Correção: A variável de valor incorreto de retorno 'PENA_CONDENACAO_CUMPLICES' foi remanejada (trocada com PENA_CONDENACAO_INDIVIDUAL) para o devido bloco de if seguindo o algoritmo primário fornecido.

Código: public class JulgamentoPrisioneiro {

	private int PENA_INOCENCIA = 10;
	private int PENA_CONDENACAO_MUTUA = 5;
	private int PENA_CONDENACAO_INDIVIDUAL = 10;
	private int PENA_CONDENACAO_CUMPLICES = 11;

	public int calculaPena(String respostaPrisioneiroA, String respostaPrisioneiroB) {
		if (respostaPrisioneiroA == "Culpado") {
			if (respostaPrisioneiroB == "Culpado") {
				return PENA_CONDENACAO_MUTUA;
			} else {
				return PENA_INOCENCIA;
			}
		} else {
			if (respostaPrisioneiroB == "Culpado") {
				return PENA_CONDENACAO_CUMPLICES;
			} else {
				return PENA_CONDENACAO_INDIVIDUAL;
			}
		}

	}

}
